% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Thinning4.R
\name{medial_axis_transform}
\alias{medial_axis_transform}
\title{Medial Axis Transform (Internal)}
\usage{
medial_axis_transform(img, verbose = FALSE, select.layer = NULL)
}
\arguments{
\item{img}{A matrix, data frame, or `SpatRaster` object representing the binary image for transformation.}

\item{verbose}{Logical. If `TRUE`, outputs diagnostic information such as image dimensions, progress of computation, and final skeleton size. Default is `FALSE`.}

\item{select.layer}{Integer indicating the layer to use if `img` is a multi-layer `SpatRaster`. Default is 2.}
}
\value{
A binary matrix where `1` represents skeleton pixels and `0` represents the background.
}
\description{
This internal function computes the medial axis transform of a binary image, identifying the set of skeleton points equidistant to the object's boundaries.
}
\details{
- The input image is first processed using \code{\link{load_flexible_image}} to ensure it is a binary matrix.
- The algorithm proceeds through the following steps:
  1. **Distance Transform**: Computes the distance of each foreground pixel to the nearest background pixel using a two-pass algorithm.
  2. **Local Maxima Detection**: Identifies local maxima in the distance transform to mark potential skeleton points.
  3. **Skeleton Refinement**: Ensures connectivity by connecting skeleton points within an 8-neighborhood.
- The result is a binary image representing the medial axis of the input object.
}
\examples{
\dontrun{
# Example usage
raster <- terra::rast(matrix(c(0, 1, 1, 0, 0, 1, 1, 0,1), nrow = 3))
skeleton <- medial_axis_transform(raster, verbose = TRUE)
}
}
\keyword{internal}
